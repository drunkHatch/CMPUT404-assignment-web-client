* Build an HTTP Client
** Description

   Your task is to build a partially HTTP 1.1 compliant HTTP Client
   that can GET and POST to a webserver.

   You are meant to understand the very basics of HTTP by having a
   hands-on ground up understanding of what it takes to have an HTTP
   connection.

** Collaboration
   - You may consult with others but the submission should be your
     own source code.
   - Collaboration must be documented in the README.md file
   - Any external source code must be referenced and documented in
     the httpclient.py file

** User Stories
   - As a user I want to GET from URLs
   - As a user I want to GET from URLs that use virtualhosting
   - As a user I want to POST to URLs
   - As a user I want to POST from URLs that use virtualhosting
   - As a user when I GET or POST I want the result printed to stdout
   - As a developer when I GET or POST I want the result returned as
     a HTTPResponse object

** Requirements
   - [1] Implement basic HTTP GET
   - [1] Implement basic HTTP POST
   - [1] The httpclient can pass all the tests in freetests.py
   - [?] The webserver can pass all the tests in not-free-tests.py
     (you don't have this one! it can change -- but it will be fair to the user stories/requirements)
   - [1] HTTP POST can post vars
   - [1] HTTP POST handles at least Content-Type:
     application/x-www-form-urlencoded
   - [?] httpclient can handle 404 requests and 200 requests

** Restrictions
   - [1] Use Python 3
   - [?] Must run in the undergrad lab (Ubuntu 16.04)
   - [?] License your httpclient properly (use an OSI approved license)
     - Put your name on it!
   - [1] You cannot use a Web Client library except for urllib utils
     to convert strings to url-encode and query-string format and back
      - urllib.request is BANNED
   - [1] You should use the socket library that comes with python

** Recommendations
   - Use the httpclient.py skeleton.
   - Keep it short, keep it modular
   - READ the spec, read the format of a request
   - It's a good idea to send the Host header in a GET or POST

** Submission Instructions
   - Upload your version of httpclient.py to eClass.

   - To mark your assignment I should be able to type:
    : python freetests.py
    with your version of httpclient.py in the same directory and it should run.

   - Marks will be deducted if I cannot successfully do this.

   - Marks will be deducted for using library code that does the assignment

   - Marks can be deducated for egregious violation of requirements (e.g. hard
     coding path names etc.).

** Marking
   - 4 marks for passing all of the tests except testInternetGets
   - 1 marks for passing testInternetGets
   - 2 mark for passing not-free-tests.py
